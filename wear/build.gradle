plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}
apply from: '../constants.gradle'

android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion buildConfig.buildTools
    defaultConfig {
        applicationId buildConfig.packageName
        minSdkVersion 25
        targetSdkVersion buildConfig.compileSdk
        versionCode buildConfig.versionCode
        versionName buildConfig.versionName
    }

    viewBinding.enabled = true
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            postprocessing {
                removeUnusedCode true
                removeUnusedResources true
                obfuscate true
                optimizeCode true
                proguardFile 'proguard-rules.pro'
            }
        }
    }
}

dependencies {
    implementation project(":common")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines"

    implementation "androidx.core:core-ktx:$androidx_core_ktx"
    implementation "androidx.wear:wear:$androidx_wear"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat"
    implementation "androidx.preference:preference-ktx:$androidx_preference"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout"

    implementation "com.google.android.support:wearable:$wearable_support_lib"
    implementation "com.google.android.gms:play-services-wearable:$play_services_wearable"

    compileOnly "com.google.android.wearable:wearable:$wearable_support_lib"
}

spotless {
    kotlin {
        target '**/*.kt'

        ktlint()
        endWithNewline()

        licenseHeaderFile '../License'
    }
    format 'misc', {
        target '**/*.gradle', '**/.gitignore'

        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    format 'xml', {
        target '**/*.xml'

        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
}
