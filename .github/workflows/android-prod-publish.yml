# This is a basic workflow to help you get started with Actions

name: Publish to Google Play

on:
  push:
    branches: [ production ]

jobs:
  assemble:
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-cache
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper
      - name: Build
        run: bash ./gradlew assemble --stacktrace

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: assemble
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-cache
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper
      - name: Unit tests
        run: bash ./gradlew test --stacktrace
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Unit test results
          path: ./**/build/reports/tests/
          if-no-files-found: ignore

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: assemble
    steps:
      - uses: actions/checkout@v2
      - run: brew install ktlint
      - name: Run ktlint
        run: ktlint --android --reporter=checkstyle,output=ktlint_result.xml
      - uses: yutailang0119/action-ktlint@v1.0.0
        if: failure()
        with:
          xml_path: ktlint_result.xml
      - run: bash ./gradlew lint
      - uses: yutailang0119/action-android-lint@v1.0.2
        with:
          xml_path: mobile/build/reports/lint-results.xml
      - uses: yutailang0119/action-android-lint@v1.0.2
        with:
          xml_path: wear/build/reports/lint-results.xml

  sign:
    name: Sign and Save Bundles
    runs-on: ubuntu-latest
    needs: [ code-quality, test ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle Packages
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-cache
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper
      - name: Build Mobile Release Artifacts
        run: ./gradlew :mobile:bundleRelease
      - name: Sign Mobile Release
        id: sign-mobile-release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: mobile/build/outputs/bundle/release/
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASS }}
          keyPassword: ${{ secrets.KEYSTORE_ALIAS_PASS }}
      - name: Save Signed Mobile Bundle
        uses: actions/upload-artifact@v2.2.0
        with:
          name: mobile-release.aab
          path: ${{ steps.sign-mobile-release.outputs.signedReleaseFile }}
      - name: Build Wear Release Artifacts
        run: ./gradlew :wear:bundleRelease
      - name: Sign Wear Release
        id: sign-wear-release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: wear/build/outputs/bundle/release/
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASS }}
          keyPassword: ${{ secrets.KEYSTORE_ALIAS_PASS }}
      - name: Save Signed Wear Bundle
        uses: actions/upload-artifact@v2.2.0
        with:
          name: wear-release.aab
          path: ${{ steps.sign-wear-release.outputs.signedReleaseFile }}

  upload:
    name: Upload to Google Play
    runs-on: ubuntu-latest
    needs: sign
    steps:
      - name: Download mobile-release.aab
        uses: actions/download-artifact@v2.0.5
        with:
          name: mobile-release.aab
          path: release/
      - name: Download wear-release.aab
        uses: actions/download-artifact@v2.0.5
        with:
          name: wear-release.aab
          path: release/
      - name: Upload to Google Play
        uses: boswelja/upload-google-play@master
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: "com.boswelja.devicemanager"
          releaseFiles: "release/mobile-release.aab,release/wear-release.aab"
          whatsNewDirectory: changelogs/
          track: production
