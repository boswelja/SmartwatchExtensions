# This is a basic workflow to help you get started with Actions

name: Publish to Google Play

on:
  push:
    branches: [ production ]

jobs:
  assemble:
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-cache
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper
      - name: Build
        run: bash ./gradlew assemble --stacktrace

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: assemble
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-cache
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper
      - name: Unit tests
        run: bash ./gradlew test --stacktrace
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Unit test results
          path: ./**/build/reports/tests/
          if-no-files-found: ignore

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: assemble
    steps:
      - uses: actions/checkout@v2
      - name: Run ktlint with reviewdog
        uses: ScaCap/action-ktlint@1.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          android: true
  
  sign:
    name: Sign and Upload AAB
    runs-on: ubuntu-latest
    needs: [ code-quality, test ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle Packages
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-cache
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2.1.2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper
      - name: Build Mobile Release Artifacts
        run: ./gradlew :mobile:bundleRelease
      - name: Sign Mobile Release
        id: sign-mobile-release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: mobile/app/build/outputs/bundle/release/
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASS }}
          keyPassword: ${{ secrets.KEYSTORE_ALIAS_PASS }}
      - name: Upload Signed Mobile Bundle
        uses: actions/upload-artifact@v2.2.0
        with:
          name: mobile-release.aab
          path: ${{ steps.sign-mobile-release.outputs.signedReleaseFile }}
      - name: Build Wear Release Artifacts
        run: ./gradlew :wear:bundleRelease
      - name: Sign Wear Release
        id: sign-wear-release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: wear/app/build/outputs/bundle/release/
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASS }}
          keyPassword: ${{ secrets.KEYSTORE_ALIAS_PASS }}
      - name: Upload Signed Wear Bundle
        uses: actions/upload-artifact@v2.2.0
        with:
          name: mobile-release.aab
          path: ${{ steps.sign-wear-release.outputs.signedReleaseFile }}
