ext.versions = [
        versionCode: generateVersionCode(),
        versionName: "2.1.2",
        compileSdk: 29,
        packageName: "com.boswelja.devicemanager",
        buildTools: "29.0.0",

        kotlin_version: "1.3.31",

        wearable_support_lib: "2.4.0",
        play_services_wearable: "16.0.1",
        androidx_core_ktx: "1.2.0-alpha01",
        androidx_wear: "1.0.0",
        androidx_appcompat: "1.1.0-beta01",
        androidx_preference: "1.1.0-beta01"
]

static def generateVersionCode() {
    def versionBuildKey = 'version.build_number'
    def versionPropFile = new File('version.properties')
    def versionBuild
    def versionProps = new Properties()
    if (!versionPropFile.canRead()) {
        if (versionPropFile.createNewFile()) {
            versionProps.load(new FileInputStream(versionPropFile))
        }
    } else {
        versionProps.load(new FileInputStream(versionPropFile))
    }

    if (versionProps.containsKey(versionBuildKey) && !isOldData(versionPropFile.lastModified())) {
        versionBuild = versionProps.get(versionBuildKey).toInteger() + 1
    } else {
        versionBuild = 0
    }
    if (versionBuild <= 99) {
        versionProps.put(versionBuildKey, versionBuild.toString())
        versionProps.store(new FileWriter(versionPropFile), null)
    } else {
        throw new Exception("Build limit reached")
    }
    def buildNumber = String.format("%02d", versionBuild)

    def dateSection = new Date().format('yyyyMMdd').toString()
    return dateSection.concat(buildNumber).toInteger()
}

static def isOldData(Long timestamp) {
    Calendar lastBuildDate = Calendar.getInstance()
    lastBuildDate.setTimeInMillis(timestamp)
    lastBuildDate.set(Calendar.HOUR_OF_DAY, 0)
    lastBuildDate.set(Calendar.MINUTE, 0)
    lastBuildDate.set(Calendar.SECOND, 0)
    lastBuildDate.set(Calendar.MILLISECOND, 0)
    Calendar currentDate = Calendar.getInstance()
    currentDate.setTimeInMillis(System.currentTimeMillis())
    currentDate.set(Calendar.HOUR_OF_DAY, 0)
    currentDate.set(Calendar.MINUTE, 0)
    currentDate.set(Calendar.SECOND, 0)
    currentDate.set(Calendar.MILLISECOND, 0)
    return lastBuildDate < currentDate
}